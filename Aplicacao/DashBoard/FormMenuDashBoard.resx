<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mJuiwgCZhuhCABaJkQhAAmJmJCAJuhCEA//Z
</value>
  </data>
</root>